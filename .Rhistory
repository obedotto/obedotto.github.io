library(manipulate)
installed.packages("manipulate")
installed.packages('manipulate')
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages('stringr')
library(ISLR);
library(ggplot2);
library(caret);
library(kernlab)
set.seed(2500)
data(Wage)
summary(Wage)
inTrain<-createDataPartition(y=Wage$wage,p=0.7,list=FALSE)
training<-Wage[inTrain,];
testing<-Wage[-inTrain,];
dim(training)
dim(testing)
featurePlot(x=training[,c("age","education","jobclass")],y=training$wage,plot="pairs")
wageModel<-train(wage~.,data=training)
library(ISLR);
library(ggplot2);
library(caret);
library(kernlab)
set.seed(2500)
data(Wage)
summary(Wage)
inTrain<-createDataPartition(y=Wage$wage,p=0.7,list=FALSE)
training<-Wage[inTrain,];
testing<-Wage[-inTrain,];
featurePlot(x=training[,c("age","education","jobclass")],y=training$wage,plot="pairs")
wageModel<-train(wage~.,data=training,method="glm")
warnings()
wageModel
out<-predict(wageModel,testing)
confusionMatrix(testing$wage,out)
list.files()
setwd("./week3")
list.files()
setwd("./first")
list.files()
setwd("..")
setwd("./second")
list.files()
setwd("..")
list.files()
setwd("..")
list.files()
setwd("./obedwagepredictor/")
list.files()
library(ISLR);
library(ggplot2);
library(caret);
library(kernlab)
set.seed(2500)
data(Wage)
summary(Wage)
names(Wage)
class(Wage$sex)
class(Wage$year)
class(Wage$maritl)
class(Wage$race)
Wage$race
names(Wage)
class(Wage$education)
class(Wage$region)
class(Wage$jobclass)
class(Wage$health
)
Wage$health
summary(Wage$health)
names(Wage)
summary(Wage$year)
WageNew<-Wage[,c("year","age","sex","maritl","race","education","region","jobclass","health","health_ins","wage")]
length(WageNew)
class(WageNew)
dim(WageNew)
WageNew<-Wage[,c("year","age","sex","maritl","race","education","region","jobclass","health","health_ins","wage")]
inTrain<-createDataPartition(y=WageNew$wage,p=0.7,list=FALSE)
training<-WageNew[inTrain,];
testing<-WageNew[-inTrain,];
WageNew<-Wage[,c("year","age","sex","maritl","race","education","region","jobclass","health","health_ins","wage")]
wageModel<-train(WageNew~.,data=training,method="rf")
wageModel<-train(wage~.,data=training,method="rf")
wageModel
wageModel<-train(wage~.,data=training,method="rf")
wageModel
out<-predict(wageModel,testing)
confusionMatrix(testing$wage,out)
out
testing$wage
out
confusionMatrix(testing$wage,out)
table(testing$wage,out)
summary(out)
mse(out,testing$wage)
x<-1:100;
x
y<-1:100;
plot(x,y)
length(out)
x<-1:898
x
plot(x,out)
class(out)
out[1:5]
out[0:5]
out[0]
out[[0]]
out[[1]]
1:5
lines(x,testing$wage)
testing$wage[1:5]
list.files()
data.frame("x"=3,y=3)
table(training$year)
table(training$age)
table(training$sex)
table(training$maritl)
table(training$race)
table(training$education)
table(training$region)
table(training$jobclass)
table(training$health)
table(training$health_ins)
class(training$health_ins)
input1<-data.frame("year"=2003,"age"=30,"sex"="Male","maritl"="Married","race"="Black","education"="HS Grad","region"="Middle Atlantic","jobclass"="Industrial","health"="<=Good","health_ins"="YES")
class(input1$sex)
out1<-predict(wageModel,input1)
table(training$sex)
class(training$sex)
testing[1,]$sex
input1$sex
input1<-data.frame("year"=2003,"age"=30,"sex"="1. Male","maritl"="Married","race"="Black","education"="HS Grad","region"="Middle Atlantic","jobclass"="Industrial","health"="<=Good","health_ins"="YES")
out1<-predict(wageModel,input1)
shiny::runApp()
shiny::runApp()
table(Wage$year)
table(Wage$age)
max(Aage$age)
max(Wage$age)
table(Wage$sex)
table(Wage$maritl)
table(Wage$race)
table(Wage$education)
table(Wage$region)
table(Wage$jobclass)
table(Wage$health)
table(Wage$health_ins)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
WageNew<-Wage[,c("year","age","maritl","race","education","jobclass","health","health_ins","wage")]
inTrain<-createDataPartition(y=WageNew$wage,p=0.7,list=FALSE)
training<-WageNew[inTrain,];
testing<-WageNew[-inTrain,];
wageModel<-train(wage~.,data=training,method="gbm")
out<-predict(wageModel,testing)
testing$wage[1:2]
testing$wage[1:10]
out[1:10]
library(gbm)
qplot(age,wage,color=jobclass,data=training)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x1<-c(30,10,40)
paste('hi',x1)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x2<-c(0)
x2++
;
x2++;
x2<-x2+1;
x2
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::setAccountInfo(name='obedotto',
token='8C6E7E73A5F607E6D89310FCF91D0F28',
secret='ucFudQRidCGlMcp1ep6Xu+dZE55VIZGr8LkVNLG7')
library(shinyapps)
